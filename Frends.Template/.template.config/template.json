{
  "$schema": "https://json.schemastore.org/template",
  "author": "Frends",
  "classifications": [
    "Solution"
  ],
  "name": "Frends Task",
  "identity": "FrendsTaskTemplate",
  "shortName": "frendstasktemplate",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "sourceName": "Frends.Echo.Execute",
  "preferNameDirectory": true,
  "symbols": {
    "FullTaskName": {
      "type": "parameter",
      "datatype": "string",
      "defaultValue": "Frends.Echo.Execute",
      "replaces": "Frends.Echo.Execute",
      "description": "Full name in format: Frends.ClassName.MethodName"
    },
    "className": {
      "type": "derived",
      "valueSource": "FullTaskName",
      "valueTransform": "GetClassName",
      "replaces": "Echo"
    },
    "taskName": {
      "type": "derived",
      "valueSource": "FullTaskName",
      "valueTransform": "GetMethodName",
      "replaces": "Execute"
    },
    "workflows": {
      "type": "derived",
      "valueSource": "FullTaskName",
      "valueTransform": "GetMethodName",
      "FileRename": "Execute"
    },
    "CurrentDate": {
      "type": "generated",
      "generator": "now",
      "parameters": {
        "format": "yyyy-MM-dd"
      },
      "replaces": "GeneratedDate"
    },
    "CurrentYear": {
      "type": "generated",
      "generator": "now",
      "parameters": {
        "format": "yyyy"
      },
      "replaces": "GeneratedYear"
    }
  },
  "forms": {
    "GetClassName": {
      "identifier": "replace",
      "pattern": "^.*\\.([^.]+)\\.[^.]+$",
      "replacement": "$1"
    },
    "GetMethodName": {
      "identifier": "replace",
      "pattern": "^.*\\.([^.]+)$",
      "replacement": "$1"
    }
  },
  "SpecialCustomOperations": {
    "**/*.md": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": [
              "---#if"
            ],
            "else": [
              "---#else"
            ],
            "elseif": [
              "---#elseif",
              "---#elif"
            ],
            "endif": [
              "---#endif"
            ],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    },
    "**/*.csproj": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "actionableIf": [
              "<!--#if"
            ],
            "actionableElse": [
              "#else",
              "<!--#else"
            ],
            "actionableElseif": [
              "#elseif",
              "<!--#elseif"
            ],
            "endif": [
              "#endif",
              "<!--#endif"
            ],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    }
  },
  "postActions": [
    {
      "condition": "(OS == \"Windows_NT\")",
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "args": {
        "executable": "setup.cmd",
        "args": "/Y",
        "redirectStandardOutput": false,
        "redirectStandardError": false
      },
      "manualInstructions": [
        {
          "text": "Run 'setup.cmd'"
        }
      ],
      "continueOnError": false,
      "description": "setups the project by calling setup.cmd"
    },
    {
      "condition": "(OS != \"Windows_NT\")",
      "description": "Make scripts executable",
      "manualInstructions": [
        {
          "text": "Run 'chmod +x setup.sh'"
        }
      ],
      "actionId": "cb9a6cf3-4f5c-4860-b9d2-03a574959774",
      "args": {
        "+x": "setup.sh"
      },
      "continueOnError": true
    },
    {
      "condition": "(OS != \"Windows_NT\")",
      "description": "setups the project by calling setup.sh",
      "manualInstructions": [
        {
          "text": "Run 'bash ./setup.sh'"
        }
      ],
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "args": {
        "+x": "setup.sh",
        "executable": "setup.sh",
        "redirectStandardOutput": false,
        "redirectStandardError": false
      },
      "continueOnError": false
    }
  ]
}